{"version":3,"sources":["webpack:///component---src-pages-experience-js-8997db8801e6602b17a9.js","webpack:///./src/data/Experience.js?18d1","webpack:///./src/images/logos/cts.png?9933","webpack:///./src/images/logos/deloitte.png?82e2","webpack:///./src/images/logos/infy.jpg?d4c1","webpack:///./src/pages/experience.js"],"names":["webpackJsonp","85","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_deloitte","_deloitte2","_cts","_cts2","_infy","_infy2","id","heading","subHeadings","description","companyLink","image","main","141","p","142","143","240","_react","_react2","_gatsbyLink","_gatsbyLink2","_ExpandedCard","_ExpandedCard2","_Experience","_Experience2","ExperiencePage","createElement","className","to","map","experience","key","data"],"mappings":"AAAAA,cAAc,iBAERC,GACA,SAAUC,EAAQC,EAASC,GAEhC,YAgBA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAdvFH,EAAQI,YAAa,CCPtB,IAAAE,GAAAL,EAAA,KDWKM,EAAaL,EAAuBI,GCVzCE,EAAAP,EAAA,KDcKQ,EAAQP,EAAuBM,GCbpCE,EAAAT,EAAA,KDiBKU,EAAST,EAAuBQ,EAIpCV,GAAQK,UCjBDO,GAAI,EACJC,QAAS,eACTC,aAAc,0CACdC,s4BAiBAC,YAAa,uBACbC,gBACAC,KAAM,gBAGNN,GAAI,EACJC,QAAS,YACTC,aAAc,2CACdC,u3BAgBAC,YAAa,wBACbC,gBACAC,KAAM,gBAGNN,GAAI,EACJC,QAAS,mBACTC,aAAc,sCACdC,opCAsBAE,gBACAD,YAAa,kBACbE,KAAM,gBDlCbnB,EAAOC,QAAUA,EAAiB,SAI7BmB,IACA,SAAUpB,EAAQC,EAASC,GErDjCF,EAAAC,QAAAC,EAAAmB,EAAA,2BF2DMC,IACA,SAAUtB,EAAQC,EAASC,GG5DjCF,EAAAC,QAAAC,EAAAmB,EAAA,gCHkEME,IACA,SAAUvB,EAAQC,EAASC,GInEjCF,EAAAC,QAAAC,EAAAmB,EAAA,4BJyEMG,IACA,SAAUxB,EAAQC,EAASC,GAEhC,YAoBA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAlBvFH,EAAQI,YAAa,CK9EtB,IAAAoB,GAAAvB,EAAA,GLkFKwB,EAAUvB,EAAuBsB,GKjFtCE,EAAAzB,EAAA,ILqFK0B,EAAezB,EAAuBwB,GKnF3CE,EAAA3B,EAAA,ILuFK4B,EAAiB3B,EAAuB0B,GKrF7CE,EAAA7B,EAAA,ILyFK8B,EAAe7B,EAAuB4B,GKvFrCE,EAAiB,iBACnBP,GAAApB,QAAA4B,cAAA,OAAKC,UAAU,aACXT,EAAApB,QAAA4B,cAAAN,EAAAtB,SAAM8B,GAAG,IAAID,UAAU,sBAAvB,UACAT,EAAApB,QAAA4B,cAAA,MAAIC,UAAU,kBAAd,eAEIH,EAAA1B,QAAY+B,IAAI,SAAAC,GAAA,MAAcZ,GAAApB,QAAA4B,cAAAJ,EAAAxB,SAAciC,IAAKD,EAAWzB,GAAI2B,KAAMF,OL0GjFrC,GAAQK,QKrGM2B,ELsGdjC,EAAOC,QAAUA,EAAiB","file":"component---src-pages-experience-js-8997db8801e6602b17a9.js","sourcesContent":["webpackJsonp([49775852442029],{\n\n/***/ 85:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _deloitte = __webpack_require__(142);\n\t\n\tvar _deloitte2 = _interopRequireDefault(_deloitte);\n\t\n\tvar _cts = __webpack_require__(141);\n\t\n\tvar _cts2 = _interopRequireDefault(_cts);\n\t\n\tvar _infy = __webpack_require__(143);\n\t\n\tvar _infy2 = _interopRequireDefault(_infy);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = [{\n\t    id: 3,\n\t    heading: 'Deloitte LLP',\n\t    subHeadings: ['Frontend Engineer: Dec 2016 to Present'],\n\t    description: '\\n            <p>\\n                At Deloitte, I was part of the core team building a<i>Friendly and inclusive Q &amp; A community for coders</i>. My role at Hashnode was that of a<strong>Full Stack Engineer</strong>. Features required me working across the stack, with Angular6+ on the frontend and Java / NodeJS in the backend.\\n                <br />\\n                <br />\\n                Some features that I worked on here are:\\n            </p>\\n            <ul>\\n                <li>\\n                    Performance improvements to the Post Detail Page.\\n                    This helped reduce the page load time from 11 seconds to just 4 seconds.\\n                </li>\\n                <li>\\n                Code quality Expert who laid down tslint rules in the project and integrated typescript in the sonarqube plugins.\\n                </li>\\n            </ul>\\n        ',\n\t    companyLink: \"https://deloitte.com\",\n\t    image: _deloitte2.default,\n\t    main: \"companyLink\"\n\t}, {\n\t    id: 2,\n\t    heading: 'Cognizant',\n\t    subHeadings: ['Software Engineer: Aug 2016 to Dec 2016'],\n\t    description: '\\n            <p>\\n                At Hashnode, I was part of the core team building a<i>Friendly and inclusive Q &amp; A community for coders</i>. My role at Hashnode was that of a<strong>Full Stack Engineer</strong>. Features required me working across the stack, with ReactJS on the frontend and NodeJS and MongoDB in the backend.\\n                <br />\\n                <br />\\n                Some features that I worked on here are:\\n            </p>\\n            <ul>\\n                <li>\\n                    Performance improvements to the Post Detail Page. This helped reduce the page load time from 11 seconds to just 4 seconds.\\n                </li>\\n                <li>\\n                    Worked on the rewrite of Hashnode.com to Next.js. Specifically focused on the writing experience on Hashnode.com\\n                </li>\\n            </ul>\\n        ',\n\t    companyLink: \"https://cognizant.com\",\n\t    image: _cts2.default,\n\t    main: \"companyLink\"\n\t}, {\n\t    id: 1,\n\t    heading: 'Infosys Limited.',\n\t    subHeadings: ['Web Engineer: Jun 2014 to Aug 2016'],\n\t    description: '\\n            <p>\\n                Being part of the web engineering team, I contributed to the web application front-end and server-side web development, built on a Javascript stack <strong>(JAVA &amp; Angular)</strong>.\\n                <br>\\n                <br>\\n                Some features and projects that I worked on here are:\\n            </p>\\n            <ul>\\n                <li>\\n                    Converting all listing pages to Google AMP pages\\n                </li>\\n                <li>\\n                    The Employer Dashboard. Employers using our sites had a tough time dealing with candidate applications. My team and I built a seamless experience for employers to view potential candidates, filter through the applications and also to shortlist candidates.\\n                </li>\\n                <li>\\n                    Automating the <i>listing fees</i> process for our sales teams\\n                </li>\\n                <li>\\n                    Improvements to the <i>Buy Now</i> feature that made using it a breeze both for end-users and for our internal sales teams.\\n                </li>\\n            </ul>\\n        ',\n\t    image: _infy2.default,\n\t    companyLink: \"https://infosys\",\n\t    main: \"companyLink\"\n\t}];\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 141:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/cts.24558d88.png\";\n\n/***/ }),\n\n/***/ 142:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/deloitte.cce0f2c3.png\";\n\n/***/ }),\n\n/***/ 143:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/infy.4f441331.jpg\";\n\n/***/ }),\n\n/***/ 240:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(24);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _ExpandedCard = __webpack_require__(57);\n\t\n\tvar _ExpandedCard2 = _interopRequireDefault(_ExpandedCard);\n\t\n\tvar _Experience = __webpack_require__(85);\n\t\n\tvar _Experience2 = _interopRequireDefault(_Experience);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar ExperiencePage = function ExperiencePage() {\n\t    return _react2.default.createElement(\n\t        'div',\n\t        { className: 'container' },\n\t        _react2.default.createElement(\n\t            _gatsbyLink2.default,\n\t            { to: '/', className: 'transparent-button' },\n\t            '\\u2039 Back'\n\t        ),\n\t        _react2.default.createElement(\n\t            'h2',\n\t            { className: 'heading t-bold' },\n\t            'Experience.'\n\t        ),\n\t        _Experience2.default.map(function (experience) {\n\t            return _react2.default.createElement(_ExpandedCard2.default, { key: experience.id, data: experience });\n\t        })\n\t    );\n\t};\n\t\n\texports.default = ExperiencePage;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-experience-js-8997db8801e6602b17a9.js","import flipkart from '../images/logos/deloitte.png';\r\nimport hashnode from '../images/logos/cts.png';\r\nimport saltside from '../images/logos/infy.jpg';\r\n\r\nexport default [\r\n    {\r\n        id: 3,\r\n        heading: 'Deloitte LLP',\r\n        subHeadings: ['Frontend Engineer: Dec 2016 to Present'],\r\n        description: `\r\n            <p>\r\n                At Deloitte, I was part of the core team building a<i>Friendly and inclusive Q &amp; A community for coders</i>. My role at Hashnode was that of a<strong>Full Stack Engineer</strong>. Features required me working across the stack, with Angular6+ on the frontend and Java / NodeJS in the backend.\r\n                <br />\r\n                <br />\r\n                Some features that I worked on here are:\r\n            </p>\r\n            <ul>\r\n                <li>\r\n                    Performance improvements to the Post Detail Page.\r\n                    This helped reduce the page load time from 11 seconds to just 4 seconds.\r\n                </li>\r\n                <li>\r\n                Code quality Expert who laid down tslint rules in the project and integrated typescript in the sonarqube plugins.\r\n                </li>\r\n            </ul>\r\n        `,\r\n        companyLink: \"https://deloitte.com\",\r\n        image: flipkart,\r\n        main: \"companyLink\"\r\n    },\r\n    {\r\n        id: 2,\r\n        heading: 'Cognizant',\r\n        subHeadings: ['Software Engineer: Aug 2016 to Dec 2016'],\r\n        description: `\r\n            <p>\r\n                At Hashnode, I was part of the core team building a<i>Friendly and inclusive Q &amp; A community for coders</i>. My role at Hashnode was that of a<strong>Full Stack Engineer</strong>. Features required me working across the stack, with ReactJS on the frontend and NodeJS and MongoDB in the backend.\r\n                <br />\r\n                <br />\r\n                Some features that I worked on here are:\r\n            </p>\r\n            <ul>\r\n                <li>\r\n                    Performance improvements to the Post Detail Page. This helped reduce the page load time from 11 seconds to just 4 seconds.\r\n                </li>\r\n                <li>\r\n                    Worked on the rewrite of Hashnode.com to Next.js. Specifically focused on the writing experience on Hashnode.com\r\n                </li>\r\n            </ul>\r\n        `,\r\n        companyLink: \"https://cognizant.com\",\r\n        image: hashnode,\r\n        main: \"companyLink\"\r\n    },\r\n    {\r\n        id: 1,\r\n        heading: 'Infosys Limited.',\r\n        subHeadings: ['Web Engineer: Jun 2014 to Aug 2016'],\r\n        description: `\r\n            <p>\r\n                Being part of the web engineering team, I contributed to the web application front-end and server-side web development, built on a Javascript stack <strong>(JAVA &amp; Angular)</strong>.\r\n                <br>\r\n                <br>\r\n                Some features and projects that I worked on here are:\r\n            </p>\r\n            <ul>\r\n                <li>\r\n                    Converting all listing pages to Google AMP pages\r\n                </li>\r\n                <li>\r\n                    The Employer Dashboard. Employers using our sites had a tough time dealing with candidate applications. My team and I built a seamless experience for employers to view potential candidates, filter through the applications and also to shortlist candidates.\r\n                </li>\r\n                <li>\r\n                    Automating the <i>listing fees</i> process for our sales teams\r\n                </li>\r\n                <li>\r\n                    Improvements to the <i>Buy Now</i> feature that made using it a breeze both for end-users and for our internal sales teams.\r\n                </li>\r\n            </ul>\r\n        `,\r\n        image: saltside,\r\n        companyLink: \"https://infosys\",\r\n        main: \"companyLink\"\r\n    },\r\n];\n\n\n// WEBPACK FOOTER //\n// ./src/data/Experience.js","module.exports = __webpack_public_path__ + \"static/cts.24558d88.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/logos/cts.png\n// module id = 141\n// module chunks = 35783957827783 49775852442029","module.exports = __webpack_public_path__ + \"static/deloitte.cce0f2c3.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/logos/deloitte.png\n// module id = 142\n// module chunks = 35783957827783 49775852442029","module.exports = __webpack_public_path__ + \"static/infy.4f441331.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/logos/infy.jpg\n// module id = 143\n// module chunks = 35783957827783 49775852442029","import React from 'react';\r\nimport Link from 'gatsby-link';\r\n\r\nimport ExpandedCard from '../components/ExpandedCard';\r\n\r\nimport experiences from '../data/Experience';\r\n\r\nconst ExperiencePage = () => (\r\n    <div className=\"container\">\r\n        <Link to=\"/\" className=\"transparent-button\">‹ Back</Link>\r\n        <h2 className=\"heading t-bold\">Experience.</h2>\r\n        {\r\n            experiences.map(experience => <ExpandedCard key={experience.id} data={experience} />)\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default ExperiencePage;\n\n\n// WEBPACK FOOTER //\n// ./src/pages/experience.js"],"sourceRoot":""}